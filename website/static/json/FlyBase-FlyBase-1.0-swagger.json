{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "FlyBase API",
    "url" : "https://api.flybase.org/api/v1.0/"
  } ],
  "info" : {
    "description" : "API access to various FlyBase.org data sets",
    "version" : "1.0",
    "title" : "FlyBase.org API",
    "contact" : {
      "url" : "http://flybase.org/contact/email"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "Domains",
    "description" : "Endpoints for retrieving protein domain information"
  }, {
    "name" : "Chado",
    "description" : "Endpoints for retrieving ChadoXML"
  }, {
    "name" : "Datasets",
    "description" : "Endpoints for retrieving FlyBase Dataset objects."
  }, {
    "name" : "Gene Summaries",
    "description" : "Endpoints for retrieving gene summary information."
  }, {
    "name" : "HitList",
    "description" : "Endpoints for retrieving hitlist information."
  }, {
    "name" : "Updates",
    "description" : "Endpoints for retrieving recent update information."
  }, {
    "name" : "Ontology",
    "description" : "Endpoints for retrieving ontology related data."
  }, {
    "name" : "Sequence",
    "description" : "Endpoints for retrieving sequence related data."
  }, {
    "name" : "Species",
    "description" : "Endpoints for retrieving species for FlyBase objects."
  }, {
    "name" : "Expression",
    "description" : "Endpoints for retrieving expression related information."
  }, {
    "name" : "Publications",
    "description" : "Endpoints for various publication related functions."
  } ],
  "paths" : {
    "/species/lookup/{flybaseIds}" : {
      "get" : {
        "tags" : [ "Species" ],
        "summary" : "Find species information for any FlyBase ID.",
        "operationId" : "speciesLookupById",
        "description" : "This service returns the genus, species, and abbreviation for any FlyBase ID.",
        "parameters" : [ {
          "in" : "path",
          "name" : "flybaseIds",
          "description" : "One or more FlyBase IDs delimited by commas.",
          "example" : "FBgn0000490,FBgn0013765",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Genus, species, and FlyBase species abbreviation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpeciesLookupResult"
                }
              }
            }
          }
        }
      }
    },
    "/species/lookup" : {
      "post" : {
        "tags" : [ "Species" ],
        "summary" : "Find species information for any FlyBase ID.",
        "operationId" : "speciesBulkLookupById",
        "description" : "This service returns the genus, species, and abbreviation for any FlyBase ID.",
        "requestBody" : {
          "description" : "An array of IDs to lookup species information for.",
          "required" : true,
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ids" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "required" : [ "ids" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Genus, species, and FlyBase species abbreviation.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SpeciesLookupResult"
                }
              }
            }
          }
        }
      }
    },
    "/sequence/region/{species}/{location}" : {
      "get" : {
        "tags" : [ "Sequence" ],
        "summary" : "Fetch sequence data by sequence location",
        "operationId" : "getSequenceDataByLocation",
        "description" : "Sequence data endpoint.",
        "parameters" : [ {
          "in" : "path",
          "name" : "species",
          "description" : "The 4 letter FlyBase species abbreviation.",
          "example" : "dmel",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "location",
          "description" : "The genome region to fetch.",
          "example" : "2L:100000..101000",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "strand",
          "description" : "The sequence strand to retrieve sequence data for.",
          "example" : "minus",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "plus", "minus" ]
          }
        }, {
          "in" : "query",
          "name" : "padding",
          "description" : "Additional 5 prime and 3 prime flanking sequence to add to the specified region.",
          "example" : 100,
          "required" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reponse for the Sequence data endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SequenceDataResult"
                }
              }
            }
          }
        }
      }
    },
    "/sequence/region/bulk" : {
      "post" : {
        "tags" : [ "Sequence" ],
        "summary" : "Fetch sequence data by sequence location",
        "operationId" : "getSequenceDataByLocationBulk",
        "description" : "Sequence data endpoint.",
        "requestBody" : {
          "description" : "Bulk sequence endpoint request body",
          "required" : true,
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "species" : {
                    "type" : "string"
                  },
                  "regions" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "strand" : {
                    "type" : "string",
                    "enum" : [ "plus", "minus" ]
                  },
                  "padding" : {
                    "type" : "integer"
                  }
                },
                "required" : [ "species", "regions" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Reponse for the Sequence data endpoint.",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/sequence/id/{flybaseId}" : {
      "get" : {
        "tags" : [ "Sequence" ],
        "summary" : "Fetch sequence data for FlyBase objects.",
        "operationId" : "getSequenceData",
        "description" : "Sequence data endpoint.",
        "parameters" : [ {
          "in" : "path",
          "name" : "flybaseId",
          "description" : "The FlyBase ID to fetch sequence data for.",
          "example" : "FBgn0000490",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reponse for the Sequence data endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SequenceDataResult"
                }
              }
            }
          }
        }
      }
    },
    "/sequence/id/{flybaseId}/{subType}" : {
      "get" : {
        "tags" : [ "Sequence" ],
        "summary" : "Fetch sequence data for FlyBase objects.",
        "operationId" : "getSequenceDataSubType",
        "description" : "Sequence data endpoint.",
        "parameters" : [ {
          "in" : "path",
          "name" : "flybaseId",
          "description" : "The FlyBase ID to fetch sequence data for.",
          "example" : "FBgn0000490",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "subType",
          "description" : "The data class sub type to fetch.",
          "example" : "FBpp",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "FBgn", "FBtr", "FBpp", "FBcl", "FBsf", "FBti", "FBtp", "exon", "intron", "five_prime_utr", "three_prime_utr", "CDS" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reponse for the Sequence data endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SequenceDataResult"
                }
              }
            }
          }
        }
      }
    },
    "/sequence/id/bulk" : {
      "post" : {
        "tags" : [ "Sequence" ],
        "summary" : "Fetch sequence data for FlyBase objects.",
        "operationId" : "getBulkIdSequenceData",
        "description" : "Sequence data endpoint.",
        "requestBody" : {
          "description" : "Bulk sequence endpoint request body",
          "required" : true,
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ids" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "type" : {
                    "type" : "string",
                    "enum" : [ "FBgn", "FBtr", "FBpp", "FBcl", "FBsf", "FBti", "FBtp", "exon", "intron", "five_prime_utr", "three_prime_utr", "CDS" ]
                  }
                },
                "required" : [ "ids" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Reponse for the Sequence data endpoint.",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/ribbon/go/{goDomain}/{fbgnId}" : {
      "get" : {
        "tags" : [ "Ontology" ],
        "summary" : "Fetch GO slims for a FlyBase gene.",
        "operationId" : "getGoRibbonSlim",
        "description" : "Fetches the GO slim for a gene from the specificed GO domain.",
        "parameters" : [ {
          "in" : "path",
          "name" : "goDomain",
          "description" : "The GO domain to retrieve a slim for.",
          "example" : "biological_process",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "biological_process", "cellular_component", "molecular_function" ]
          }
        }, {
          "in" : "path",
          "name" : "fbgnId",
          "description" : "The FlyBase gene ID to retrieve a slim for.",
          "example" : "FBgn0000490",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reponse for the FlyBase GO Slim/Ribbon endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GoSlimResult"
                }
              }
            }
          }
        }
      }
    },
    "/updates/{flybaseId}" : {
      "get" : {
        "tags" : [ "HitList", "Updates" ],
        "summary" : "Fetch recent update information.",
        "operationId" : "getRecentUpdates",
        "description" : "Fetches the recent update information for a given FlyBase object.  Recent updates report new connections between the current and previous release.",
        "parameters" : [ {
          "in" : "path",
          "name" : "flybaseId",
          "description" : "A FlyBase ID.",
          "example" : "FBgn0000490",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Response for the FlyBase recent update endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RecentUpdatesResult"
                }
              }
            }
          }
        }
      }
    },
    "/hitlist/fetch/{flybaseIds}" : {
      "get" : {
        "tags" : [ "HitList" ],
        "summary" : "Fetch FlyBase HitList information",
        "operationId" : "getFlyBaseHitList",
        "description" : "Fetches the HitList object for a given FlyBase object.",
        "parameters" : [ {
          "in" : "path",
          "name" : "flybaseIds",
          "description" : "One or more FlyBase IDs delimited by commas.",
          "example" : "FBgn0000490,FBgn0013765",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Repsonse for the FlyBase HitList endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HitListResult"
                }
              }
            }
          }
        }
      }
    },
    "/hitlist/fetch" : {
      "post" : {
        "tags" : [ "HitList" ],
        "summary" : "Fetch FlyBase HitList information",
        "operationId" : "getFlyBaseHitListBulk",
        "description" : "Fetches the HitList object for a given FlyBase object.",
        "requestBody" : {
          "description" : "Request body for HitList Fetch operation.",
          "required" : true,
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ids" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "required" : [ "ids" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Repsonse for the FlyBase HitList endpoint",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HitListResult"
                }
              }
            }
          }
        }
      }
    },
    "/gene/summaries/auto/{fbgnId}" : {
      "get" : {
        "tags" : [ "Gene Summaries" ],
        "summary" : "Fetch auto gene summaries.",
        "operationId" : "getAutoGeneSummary",
        "description" : "Fetches the automatically generated summary for a given gene.",
        "parameters" : [ {
          "in" : "path",
          "name" : "fbgnId",
          "description" : "The FlyBase Gene ID (FBgn#)",
          "example" : "FBgn0000490",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Repsonse for the automatically generated summary endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GeneSummaryResult"
                }
              }
            }
          }
        }
      }
    },
    "/downloads/FBlc/associated_data/{fblcId}" : {
      "get" : {
        "tags" : [ "Datasets" ],
        "summary" : "Fetch associated data for FlyBase Datasets.",
        "operationId" : "getFblcAssociatedData",
        "description" : "Fetchs lists of strains, cell lines, and features that are associated with a FlyBase dataset object.",
        "parameters" : [ {
          "in" : "path",
          "name" : "fblcId",
          "description" : "The FlyBase Dataset ID (FBlc#)",
          "example" : "FBlc0000309",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "assoc_type",
          "description" : "Filter by strains, cell lines, or features.",
          "example" : "features",
          "schema" : {
            "type" : "string",
            "enum" : [ "features", "strains", "cell_lines" ]
          }
        }, {
          "in" : "query",
          "name" : "feature_type",
          "description" : "The FlyBase data class to restrict feature type results to.",
          "example" : "FBgn",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reponse for the Dataset associated data endpoint.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DatasetAssociatedDataResult"
                }
              }
            }
          }
        }
      }
    },
    "/chadoxml/{flyBaseId}" : {
      "get" : {
        "tags" : [ "Chado" ],
        "summary" : "Fetch ChadoXML for a FlyBase object by ID.",
        "operationId" : "getChadoXmlById",
        "description" : "Given a current and valid FlyBase ID, returns ChadoXML data.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "flyBaseId",
          "description" : "The FlyBase ID to fetch data for.",
          "example" : "FBgn0000490",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ChadoXML for a given FlyBase object.",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid ID."
          }
        }
      }
    },
    "/domain/{flyBaseGeneId}" : {
      "get" : {
        "tags" : [ "Domains" ],
        "summary" : "Gets all domains for a given gene.",
        "operationId" : "getDomainsByGeneId",
        "description" : "Given a FlyBase gene ID (FBgn#), return a list of polypeptide domains for the longest polypeptide isoform of the gene.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "flyBaseGeneId",
          "description" : "The FlyBase gene ID to fetch a domain for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Protein domains for the longest polypeptide isoform of the given gene.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainByGeneResult"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid ID."
          }
        }
      }
    },
    "/domain/{flyBasePolypeptideId}" : {
      "get" : {
        "tags" : [ "Domains" ],
        "summary" : "Gets all domains for a given polypeptide.",
        "operationId" : "getDomainsByPolypeptideId",
        "description" : "Given a FlyBase polypeptide ID (FBpp#), return a list of domains for the polypeptide\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "flyBasePolypeptideId",
          "description" : "The FlyBase polypeptide ID to fetch a domain for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Protein domains for the given polypeptide.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainByPolypeptideResult"
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid ID."
          }
        }
      }
    },
    "/expression/proteome/{flyBaseGeneId}" : {
      "get" : {
        "tags" : [ "Expression" ],
        "summary" : "Fetches proteomic LFQ expression values.",
        "operationId" : "getExpressionProteomeByGeneId",
        "description" : "Given a FlyBase gene ID (FBgn#), returns the associated Library Metadata reports\nexpression level (lfq), name, and developmental stages.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "flyBaseGeneId",
          "description" : "The FlyBase gene ID to fetch expression data for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "LFQ expression levels for experimental timepoints and their associated developmental stages.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExpressionProteomeResult"
                }
              }
            }
          }
        }
      }
    },
    "/fbrf/{flyBaseReferenceId}/abstract" : {
      "get" : {
        "tags" : [ "Publications" ],
        "summary" : "Fetches the abstract of a FlyBase reference object.",
        "operationId" : "getReferenceAbstractById",
        "description" : "Given a FlyBase reference ID (FBrf#), returns the article abstract if available.\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "flyBaseReferenceId",
          "description" : "The FlyBase reference ID to fetch an abstract for.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The abstract of the requested reference.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceAbstractResult"
                }
              }
            }
          }
        }
      }
    },
    "/fbrf/filter" : {
      "post" : {
        "tags" : [ "Publications" ],
        "summary" : "Filters a list of FBrf IDs by a given query term.",
        "operationId" : "filterReferenceIds",
        "description" : "This endpoint takes a list of FlyBase FBrf IDs and a query term and returns\na list of FBrf that has been filtered by the query term.\n",
        "requestBody" : {
          "description" : "Request body for publication filter operation.",
          "required" : true,
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "ids" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "query" : {
                    "type" : "string"
                  }
                },
                "required" : [ "ids", "query" ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The filtered list of FBrf IDs.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReferenceListFilterResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "BaseResultSet" : {
        "type" : "object",
        "properties" : {
          "api_version" : {
            "type" : "string"
          },
          "data_version" : {
            "type" : "string"
          },
          "query_url" : {
            "type" : "string",
            "format" : "url"
          },
          "query_time" : {
            "type" : "string",
            "format" : "timestamp"
          },
          "data_provider" : {
            "type" : "string"
          }
        }
      },
      "DomainByGeneResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/GeneDomain"
              }
            }
          }
        } ]
      },
      "DomainByPolypeptideResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PolypeptideDomain"
              }
            }
          }
        } ]
      },
      "DatasetAssociatedDataResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AssociatedDataResult"
              }
            }
          }
        } ]
      },
      "AssociatedDataResult" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "symbol" : {
            "type" : "string"
          },
          "cell_lines" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SymbolId"
            }
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SymbolId"
            }
          },
          "strains" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SymbolId"
            }
          }
        }
      },
      "SymbolId" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "symbol" : {
            "type" : "string"
          }
        }
      },
      "DomainRegion" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "abbrev" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "start" : {
            "type" : "integer"
          },
          "end" : {
            "type" : "integer"
          },
          "pfam" : {
            "type" : "string"
          },
          "interpro" : {
            "type" : "string"
          },
          "classification" : {
            "type" : "string"
          }
        }
      },
      "GeneDomain" : {
        "type" : "object",
        "properties" : {
          "gene_id" : {
            "type" : "string"
          },
          "gene_symbol" : {
            "type" : "string"
          },
          "proteins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolypeptideDomain"
            }
          }
        }
      },
      "PolypeptideDomain" : {
        "type" : "object",
        "properties" : {
          "protein_symbol" : {
            "type" : "string"
          },
          "protein_id" : {
            "type" : "string"
          },
          "length" : {
            "type" : "integer"
          },
          "regions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DomainRegion"
            }
          }
        }
      },
      "GeneSummaryResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/GeneSummary"
              }
            }
          }
        } ]
      },
      "GeneSummary" : {
        "type" : "object",
        "properties" : {
          "summary" : {
            "type" : "string",
            "enum" : [ "auto" ]
          },
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "HitListResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            },
            "counts" : {
              "type" : "object"
            }
          }
        } ]
      },
      "RecentUpdatesResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        } ]
      },
      "GoSlimResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        } ]
      },
      "Fasta" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "sequence" : {
            "type" : "string"
          }
        }
      },
      "SequenceDataResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "num_fetched" : {
              "type" : "integer"
            },
            "not_found" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Fasta"
              }
            }
          }
        } ]
      },
      "SpeciesLookupResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/SpeciesLookup"
              }
            }
          }
        } ]
      },
      "SpeciesLookup" : {
        "type" : "object",
        "properties" : {
          "genus" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "species" : {
            "type" : "string"
          },
          "abbreviation" : {
            "type" : "string"
          }
        }
      },
      "ExpressionProteomeResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ExpressionProteome"
              }
            }
          }
        } ]
      },
      "ExpressionProteome" : {
        "type" : "object",
        "properties" : {
          "parent" : {
            "$ref" : "#/components/schemas/ParentMetaData"
          },
          "lfq" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "stages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExpressionStages"
            }
          }
        }
      },
      "ExpressionStages" : {
        "type" : "object",
        "properties" : {
          "stage" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "ParentMetaData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ReferenceAbstractResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ReferenceAbstract"
              }
            }
          }
        } ]
      },
      "ReferenceAbstract" : {
        "type" : "object",
        "properties" : {
          "abstract" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "ReferenceListFilterResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/BaseResultSet"
        }, {
          "type" : "object",
          "properties" : {
            "result" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ReferenceListFilter"
              }
            }
          }
        } ]
      },
      "ReferenceListFilter" : {
        "type" : "object",
        "properties" : {
          "query" : {
            "type" : "string"
          },
          "filtered_ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    }
  }
}

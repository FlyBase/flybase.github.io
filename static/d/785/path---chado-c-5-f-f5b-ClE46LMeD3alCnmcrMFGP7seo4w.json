{"data":{"mdx":{"id":"4109d906-6f16-5b51-9577-16cb86751b7b","code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(Breadcrumb, null, React.createElement(Breadcrumb.Section, {\n    link: true\n  }, \"Home\"), React.createElement(Breadcrumb.Divider, null), React.createElement(Breadcrumb.Section, null, \"Chado\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components,\n    props: {\n      \"id\": \"flybase-chado\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h2\",\n    props: {\n      \"href\": \"#flybase-chado\",\n      \"aria-hidden\": true,\n      \"class\": \"anchor\"\n    }\n  }), `FlyBase Chado`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"table-of-contents\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"href\": \"#table-of-contents\",\n      \"aria-hidden\": true,\n      \"class\": \"anchor\"\n    }\n  }), `Table of Contents`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"#background\"\n    }\n  }, `Background`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"li\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"#database-dumps\"\n    }\n  }, `Database Dumps`)), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components,\n    parentName: \"li\"\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"#steps-to-load\"\n    }\n  }, `Steps to load`)))), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"#public-database\"\n    }\n  }, `Public Database`))), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"background\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"href\": \"#background\",\n      \"aria-hidden\": true,\n      \"class\": \"anchor\"\n    }\n  }), `Background`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://gmod.org/wiki/Chado\"\n    }\n  }, `Chado`), ` is a relational database schema for managing\na wide variety of biological data. It is was started by `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://flybase.org\"\n    }\n  }, `FlyBase`), `\nand is currently maintained by the `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://gmod.org\"\n    }\n  }, `GMOD`), ` organization.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"database-dumps\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"href\": \"#database-dumps\",\n      \"aria-hidden\": true,\n      \"class\": \"anchor\"\n    }\n  }), `Database Dumps`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `PostgreSQL database dumps of the FlyBase Chado database are available for every release of FlyBase from our FTP site.`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"ftp://ftp.flybase.org/releases/current/psql/\"\n    }\n  }, `ftp://ftp.flybase.org/releases/current/psql/`))), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components,\n    props: {\n      \"id\": \"steps-to-load\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h4\",\n    props: {\n      \"href\": \"#steps-to-load\",\n      \"aria-hidden\": true,\n      \"class\": \"anchor\"\n    }\n  }), `Steps to load`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This procedure assumes that you have enough disk space to hold the downloaded dump files and\nthe PostgreSQL database files.  You should expect to use ~200 GB of disk space for this procedure.`), React.createElement(MDXTag, {\n    name: \"ol\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Download all database dump files from the FTP site.`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Create your PostgreSQL database using `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"li\"\n  }, `createdb`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Load the dump file into your local database instance.`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ol\"\n  }, `Vacuum your database.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Example:`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-bash\",\n      \"metaString\": \"\"\n    }\n  }, `wget ftp://ftp.flybase.org/releases/current/psql/*.gz.*\ncreatedb -E UTF-8 my_flybase\ncat FB2018_03.sql.gz.00 FB2018_03.sql.gz.01 FB2018_03.sql.gz.02 FB2018_03.sql.gz.03 FB2018_03.sql.gz.04 FB2018_03.sql.gz.05 | gunzip | psql my_flybase \nvacuumdb -f -z -v my_flybase\n`)), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components,\n    props: {\n      \"id\": \"public-database\"\n    }\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"h3\",\n    props: {\n      \"href\": \"#public-database\",\n      \"aria-hidden\": true,\n      \"class\": \"anchor\"\n    }\n  }), `Public Database`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If you only need occasional access to the FlyBase Chado database and performance is not a primary concern\nyou can access our public Chado instance via any SQL client that supports PostgreSQL.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, ` `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `hostname:`), ` chado.flybase.org`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, ` `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `user:`), ` flybase`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, ` `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `password:`), ` `, `<`, `none`, `>`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, ` `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `database:`), ` flybase`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, ` `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `port:`), ` 5432`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Example using the command line PostgreSQL client `, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, `psql`), `:`), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-bash\",\n      \"metaString\": \"\"\n    }\n  }, `psql -h chado.flybase.org flybase flybase\npsql (10.4 (Ubuntu 10.4-0ubuntu0.18.04), server 9.5.12)\nType \"help\" for help.\n\nflybase=> \n`)));\n});"}}},"pageContext":{"id":"4109d906-6f16-5b51-9577-16cb86751b7b"}}
{"version":3,"sources":["webpack:///./src/pages/api/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/FlyBaseIcons.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["Api","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","className","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","Section","link","onClick","navigate","Divider","redoc__WEBPACK_IMPORTED_MODULE_4__","spec","Component","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","FlyBaseIcons","_ref$iconSize","iconSize","react_default","Fragment","href","Icon","name","aria-label","size","Header","siteTitle","Grid","as","verticalAlign","padded","Row","Column","width","Header_Header","gatsby_browser_entry","to","components_FlyBaseIcons","Footer","Layout","Helmet_default","title","site","siteMetadata","meta","content","lang","rel","header","footer","_755544856","node"],"mappings":"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","file":"component---src-pages-api-index-js-10e8c1b2af70e227c17d.js","sourcesContent":["import React, {Component} from 'react'\nimport { navigate } from 'gatsby'\nimport { Breadcrumb } from 'semantic-ui-react'\nimport { RedocStandalone } from 'redoc';\n//import SwaggerUI from 'swagger-ui'\n\n//import 'swagger-ui/dist/swagger-ui.css'\n\nimport Layout from '../../components/layout'\n\nimport spec from './FlyBase_FlyBase_1.0.0_swagger.json'\n\nclass Api extends Component {\n\n/*  componentDidMount() {\n    SwaggerUI({\n      dom_id: '#swagger-container',\n      spec: spec\n    })\n  }*/\n\n  render() {\n\n    return (\n      <Layout>\n        <div className=\"breadcrumb-container\">\n          <Breadcrumb>\n            <Breadcrumb.Section link onClick={() => navigate('/') }>Home</Breadcrumb.Section>\n            <Breadcrumb.Divider />\n            <Breadcrumb.Section>API</Breadcrumb.Section>\n          </Breadcrumb>\n        </div>\n        <RedocStandalone spec={spec}/>\n{/*        <div id={'swagger-container'} />*/}\n      </Layout>\n    )\n  }\n}\n\nexport default Api\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react'\n\n\nfunction FlyBaseIcons({iconSize='large'}) {\n  return (\n    <React.Fragment>\n      <a href={'http://flybase.org'}>\n        <Icon name={'home'} aria-label={'FlyBase.org'} link size={iconSize}/>\n      </a>\n      <a href={'https://github.com/FlyBase/'}>\n        <Icon name={'github'} aria-label={'GitHub'} link size={iconSize}/>\n      </a>\n      <a href={'https://twitter.com/FlyBaseDotOrg'}>\n        <Icon name={'twitter'} aria-label={'Twitter'} link size={iconSize}/>\n      </a>\n      <a href={'http://www.youtube.com/c/FlyBaseTV'}>\n        <Icon name={'youtube'} aria-label={'YouTube'}link size={iconSize}/>\n      </a>\n      <a href={'http://flybase.org/contact/email'}>\n        <Icon name={'mail'} aria-label={'Email'}link size={iconSize}/>\n      </a>\n    </React.Fragment>\n  );\n}\n\nexport default FlyBaseIcons;","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Grid, Header as SemHeader } from 'semantic-ui-react'\n\nimport FlyBaseIcons from './FlyBaseIcons'\n\nconst Header = ({ siteTitle, iconSize ='large' }) => (\n  <Grid as={'header'} className={'topbar'} verticalAlign='middle' padded>\n    <Grid.Row>\n      <Grid.Column width={12} >\n        <SemHeader as={'h1'}>\n          <Link to={'/'} className={'title'}>\n            {siteTitle}\n          </Link>\n        </SemHeader>\n      </Grid.Column>\n      <Grid.Column width={4}>\n        <FlyBaseIcons iconSize={iconSize}/>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n)\n\nexport default Header\n","import React from 'react'\nimport { Divider, Grid } from 'semantic-ui-react'\n\nimport FlyBaseIcons from './FlyBaseIcons'\n\nconst Footer = () => (\n  <Grid as={'footer'} padded>\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <Divider/>\n        <FlyBaseIcons />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport 'semantic-ui-css/semantic.min.css'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'FlyBase developer documentation.' },\n            { name: 'keywords', content: 'FlyBase, chado, documentation'},\n          ]}\n        >\n          <html lang=\"en\" />\n          <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>\n          {children}\n        </main>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}
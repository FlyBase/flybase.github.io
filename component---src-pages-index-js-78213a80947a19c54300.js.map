{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/views/Card/Card.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/FlyBaseIcons.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/lodash/_baseMap.js"],"names":["CardDescription","props","children","className","content","textAlign","classes","classnames_default","Object","classNameBuilders","rest","getUnhandledProps","ElementType","getElementType","react_default","a","createElement","extends_default","lib","isNil","handledProps","propTypes","Card_CardDescription","CardHeader","Card_CardHeader","CardMeta","Card_CardMeta","CardContent","description","extra","header","meta","factories","val","autoGenerateKey","Card_CardContent","CardGroup","centered","doubling","items","itemsPerRow","stackable","itemsJSX","map_default","item","key","join","Card_Card","Card_CardGroup","_Component","Card","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","e","onClick","inherits_default","createClass_default","value","_this$props","color","fluid","href","image","link","raised","handleClick","Image","create","react","IndexPage","layout","Grid","Row","Column","width","Group","navigate","Icon","area-label","name","size","Content","Header","Description","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","data","query","render","Error","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape","FlyBaseIcons","_ref$iconSize","iconSize","Fragment","aria-label","siteTitle","as","verticalAlign","padded","Header_Header","gatsby_browser_entry","to","components_FlyBaseIcons","Footer","Divider","Layout","Helmet_default","title","site","siteMetadata","lang","footer","_755544856","node","arrayMap","baseIteratee","baseMap","isArray","collection","iteratee","baseEach","isArrayLike","index","result"],"mappings":"6WAUA,SAAAA,EAAAC,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,UACAC,EAAgBC,IAAGC,OAAAC,EAAA,EAAAD,CAAgBH,GAAA,cAAAF,GACnCO,EAAaF,OAAAG,EAAA,EAAAH,CAAiBR,EAAAC,GAC9BW,EAAoBJ,OAAAK,EAAA,EAAAL,CAAcR,EAAAC,GAClC,OAASa,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDP,UAAAG,IACMY,EAAA,EAAaC,MAAAjB,GAAAE,EAAAF,GAGnBF,EAAAoB,aAAA,oDACApB,EAAAqB,UAeC,GACc,IAAAC,EAAA,EC9Bf,SAAAC,EAAAtB,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,UACAC,EAAgBC,IAAGC,OAAAC,EAAA,EAAAD,CAAgBH,GAAA,SAAAF,GACnCO,EAAaF,OAAAG,EAAA,EAAAH,CAAiBe,EAAAtB,GAC9BW,EAAoBJ,OAAAK,EAAA,EAAAL,CAAce,EAAAtB,GAClC,OAASa,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDP,UAAAG,IACMY,EAAA,EAAaC,MAAAjB,GAAAE,EAAAF,GAGnBqB,EAAAH,aAAA,oDACAG,EAAAF,UAeC,GACc,IAAAG,EAAA,EC9Bf,SAAAC,EAAAxB,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAC,EAAAJ,EAAAI,UACAC,EAAgBC,IAAGC,OAAAC,EAAA,EAAAD,CAAgBH,GAAA,OAAAF,GACnCO,EAAaF,OAAAG,EAAA,EAAAH,CAAiBiB,EAAAxB,GAC9BW,EAAoBJ,OAAAK,EAAA,EAAAL,CAAciB,EAAAxB,GAClC,OAASa,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDP,UAAAG,IACMY,EAAA,EAAaC,MAAAjB,GAAAE,EAAAF,GAGnBuB,EAAAL,aAAA,oDACAK,EAAAJ,UAeC,GACc,IAAAK,EAAA,EC3Bf,SAAAC,EAAA1B,GACA,IAAAC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAwB,EAAA3B,EAAA2B,YACAC,EAAA5B,EAAA4B,MACAC,EAAA7B,EAAA6B,OACAC,EAAA9B,EAAA8B,KACA1B,EAAAJ,EAAAI,UACAC,EAAgBC,IAAGC,OAAAC,EAAA,EAAAD,CAAUqB,EAAA,SAAkBrB,OAAAC,EAAA,EAAAD,CAAgBH,GAAA,UAAAF,GAC/DO,EAAaF,OAAAG,EAAA,EAAAH,CAAiBmB,EAAA1B,GAC9BW,EAAoBJ,OAAAK,EAAA,EAAAL,CAAcmB,EAAA1B,GAElC,OAAOiB,EAAA,EAAaC,MAAAjB,GAMbgB,EAAA,EAAaC,MAAAf,GAMXU,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDP,UAAAG,IACME,OAAAwB,EAAA,EAAAxB,CAAgBgB,EAAU,SAAAS,GAChC,OACA7B,QAAA6B,IAEGH,EAAA,CACHI,iBAAA,IACM1B,OAAAwB,EAAA,EAAAxB,CAAgBkB,EAAQ,SAAAO,GAC9B,OACA7B,QAAA6B,IAEGF,EAAA,CACHG,iBAAA,IACM1B,OAAAwB,EAAA,EAAAxB,CAAgBc,EAAe,SAAAW,GACrC,OACA7B,QAAA6B,IAEGL,EAAA,CACHM,iBAAA,KAxBWpB,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACvDP,UAAAG,IACKF,GARMU,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACvDP,UAAAG,IACKJ,GAgCLyB,EAAAP,aAAA,0FACAO,EAAAN,UA2BC,GACc,IAAAc,EAAA,oBC9Ef,SAAAC,EAAAnC,GACA,IAAAoC,EAAApC,EAAAoC,SACAnC,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,UACAC,EAAAH,EAAAG,QACAkC,EAAArC,EAAAqC,SACAC,EAAAtC,EAAAsC,MACAC,EAAAvC,EAAAuC,YACAC,EAAAxC,EAAAwC,UACApC,EAAAJ,EAAAI,UACAC,EAAgBC,IAAE,KAAOC,OAAAC,EAAA,EAAAD,CAAU6B,EAAA,YAAwB7B,OAAAC,EAAA,EAAAD,CAAU8B,EAAA,YAAwB9B,OAAAC,EAAA,EAAAD,CAAUiC,EAAA,aAA0BjC,OAAAC,EAAA,EAAAD,CAAgBH,GAAaG,OAAAC,EAAA,EAAAD,CAAYgC,GAAA,QAAArC,GAC1KO,EAAaF,OAAAG,EAAA,EAAAH,CAAiB4B,EAAAnC,GAC9BW,EAAoBJ,OAAAK,EAAA,EAAAL,CAAc4B,EAAAnC,GAElC,IAAOiB,EAAA,EAAaC,MAAAjB,GACpB,OAAWY,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACvDP,UAAAG,IACKJ,GAGL,IAAOgB,EAAA,EAAaC,MAAAf,GACpB,OAAWU,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACvDP,UAAAG,IACKF,GAGL,IAAAsC,EAAiBC,IAAIJ,EAAA,SAAAK,GACrB,IAAAC,EAAAD,EAAAC,KAAA,CAAAD,EAAAd,OAAAc,EAAAhB,aAAAkB,KAAA,KACA,OAAWhC,EAAAC,EAAKC,cAAe+B,EAAM9B,IAAQ,CAC7C4B,OACKD,MAGL,OAAS9B,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACrDP,UAAAG,IACGoC,GAGHN,EAAAhB,aAAA,4GACAgB,EAAAf,UA8BC,GACc,IAAA2B,EAAA,EC5DXD,EAEJ,SAAAE,GAGA,SAAAC,IACA,IAAAC,EAEAC,EAEIC,IAAeC,KAAAJ,GAEnB,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAuEA,EAAAL,EAAaK,IACpFF,EAAAE,GAAAJ,UAAAI,GAUA,OAPAR,EAAYS,IAA0BP,MAAAH,EAA2BW,IAAeZ,IAAAa,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,KAE5EQ,IAAgBC,IAAuBA,IAAsBf,IAAA,uBAAAgB,GACjE,IAAAC,EAAAjB,EAAAnD,MAAAoE,QACAA,KAAAD,EAAAhB,EAAAnD,SAGAmD,EA4DA,OAhFEkB,IAASpB,EAAAD,GAuBTsB,IAAYrB,EAAA,EACdL,IAAA,SACA2B,MAAA,WACA,IAAAC,EAAAnB,KAAArD,MACAoC,EAAAoC,EAAApC,SACAnC,EAAAuE,EAAAvE,SACAC,EAAAsE,EAAAtE,UACAuE,EAAAD,EAAAC,MACAtE,EAAAqE,EAAArE,QACAwB,EAAA6C,EAAA7C,YACAC,EAAA4C,EAAA5C,MACA8C,EAAAF,EAAAE,MACA7C,EAAA2C,EAAA3C,OACA8C,EAAAH,EAAAG,KACAC,EAAAJ,EAAAI,MACAC,EAAAL,EAAAK,KACA/C,EAAA0C,EAAA1C,KACAsC,EAAAI,EAAAJ,QACAU,EAAAN,EAAAM,OACAzE,EAAoBC,IAAE,KAAAmE,EAAclE,OAAAC,EAAA,EAAAD,CAAU6B,EAAA,YAAwB7B,OAAAC,EAAA,EAAAD,CAAUmE,EAAA,SAAkBnE,OAAAC,EAAA,EAAAD,CAAUsE,EAAA,QAAgBtE,OAAAC,EAAA,EAAAD,CAAUuE,EAAA,iBAAA5E,GACtIO,EAAiBF,OAAAG,EAAA,EAAAH,CAAiB0C,EAAAI,KAAArD,OAClCW,EAAwBJ,OAAAK,EAAA,EAAAL,CAAc0C,EAAAI,KAAArD,MAAA,WACtC,GAAAoE,EAAA,YAGA,OAAWnD,EAAA,EAAaC,MAAAjB,GAQbgB,EAAA,EAAaC,MAAAf,GAQXU,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CACzDP,UAAAG,EACAsE,OACAP,QAAAf,KAAA0B,cACUC,EAAA,EAAKC,OAAAL,EAAA,CACf3C,iBAAA,KACON,GAAAE,GAAAC,IAAsCjB,EAAAC,EAAKC,cAAemB,EAAW,CAC5EP,cACAE,SACAC,SACOF,GAAYf,EAAAC,EAAKC,cAAemB,EAAW,CAClDN,OAAA,GACOA,IAnBQf,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CAC3DP,UAAAG,EACAsE,OACAP,QAAAf,KAAA0B,cACS5E,GAZMU,EAAAC,EAAKC,cAAAJ,EAA4BK,IAAQ,GAAGP,EAAA,CAC3DP,UAAAG,EACAsE,OACAP,QAAAf,KAAA0B,cACS9E,OA2BTgD,EAjFA,CAkFEiC,EAAA,WAEFjB,IAAgBnB,EAAI,UAAaZ,GAEjC+B,IAAgBnB,EAAI,cAAiBzB,GAErC4C,IAAgBnB,EAAI,QAAWC,GAE/BkB,IAAgBnB,EAAI,SAAYvB,GAEhC0C,IAAgBnB,EAAI,OAAUrB,GAE9BwC,IAAgBnB,EAAI,kKAGpBA,EAAI1B,UAsDH,yBC9Gc+D,UA3DG,kBAChBtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMjD,UAAQ,GACZvB,EAAAC,EAAAC,cAACsE,EAAA,EAAKC,IAAN,KACEzE,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,OAAN,CAAaC,MAAO,IAClB3E,EAAAC,EAAAC,cAAC+B,EAAK2C,MAAN,CAAYrD,UAAQ,GAClBvB,EAAAC,EAAAC,cAAC+B,EAAD,CAAMgC,QAAM,EAACD,MAAI,EAACT,QAAS,kBAAMsB,mBAAS,aACxC7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMzF,UAAW,SAAU0F,aAAY,QAASC,KAAM,SAAUC,KAAM,SACtEjF,EAAAC,EAAAC,cAAC+B,EAAKiD,QAAN,KACElF,EAAAC,EAAAC,cAAC+B,EAAKkD,OAAN,cAGAnF,EAAAC,EAAAC,cAAC+B,EAAKmD,YAAN,kHAMJpF,EAAAC,EAAAC,cAAC+B,EAAD,CAAMgC,QAAM,EAACD,MAAI,EAACT,QAAS,kBAAMsB,mBAAS,iBACxC7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMzF,UAAW,SAAU0F,aAAY,YAAaC,KAAM,WAAYC,KAAM,SAC5EjF,EAAAC,EAAAC,cAAC+B,EAAKiD,QAAN,KACElF,EAAAC,EAAAC,cAAC+B,EAAKkD,OAAN,kBAGAnF,EAAAC,EAAAC,cAAC+B,EAAKmD,YAAN,4EAKJpF,EAAAC,EAAAC,cAAC+B,EAAD,CAAMgC,QAAM,EAACD,MAAI,EAACT,QAAS,kBAAMsB,mBAAS,WACxC7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMzF,UAAW,SAAU0F,aAAY,MAAOC,KAAM,OAAQC,KAAM,SAClEjF,EAAAC,EAAAC,cAAC+B,EAAKiD,QAAN,KACElF,EAAAC,EAAAC,cAAC+B,EAAKkD,OAAN,YAGAnF,EAAAC,EAAAC,cAAC+B,EAAKmD,YAAN,+DAKJpF,EAAAC,EAAAC,cAAC+B,EAAD,CAAMgC,QAAM,EAACD,MAAI,EAACF,KAAM,kCACtB9D,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAMzF,UAAW,SAAU0F,aAAY,SAAUC,KAAM,OAAQC,KAAM,SACrEjF,EAAAC,EAAAC,cAAC+B,EAAKiD,QAAN,KACElF,EAAAC,EAAAC,cAAC+B,EAAKkD,OAAN,qBAGAnF,EAAAC,EAAAC,cAAC+B,EAAKmD,YAAN,yHCpDhBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAjG,IAAAoF,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAAnG,IAAA,IAAAoG,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAxG,GAAK,OACvB0G,EAAA5F,EAAAC,cAACwF,EAAmBc,SAApB,KACG,SAAAC,GACC,OACEtH,EAAMuH,MACLD,EAAgBtH,EAAMwH,QAAUF,EAAgBtH,EAAMwH,OAAOD,MAEtDvH,EAAMyH,QAAUzH,EAAMC,UAC5BD,EAAMuH,KAAOvH,EAAMuH,KAAKA,KAAOD,EAAgBtH,EAAMwH,OAAOD,MAGvDb,EAAA5F,EAAAC,cAAA,uCAaf,SAASuF,IACP,MAAM,IAAIoB,MACR,gVATJlB,EAAYpF,UAAY,CACtBmG,KAAMI,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxBL,OAAQE,IAAUI,KAClB9H,SAAU0H,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,+GCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOxB,IAAMpG,cAAc6H,IAApBC,IAAA,CACLN,WACAC,iBACGA,EAAcM,QAIrBT,EAAiBjH,UAAY,CAC3BmH,SAAUZ,IAAUoB,MAAM,CACxBJ,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,gQCKAW,MAtBf,SAAAV,GAA0C,IAAAW,EAAAX,EAAnBY,gBAAmB,IAAAD,EAAV,QAAUA,EACxC,OACEpI,EAAAC,EAAAC,cAACF,EAAAC,EAAMqI,SAAP,KACEtI,EAAAC,EAAAC,cAAA,KAAG4D,KAAM,sBACP9D,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAME,KAAM,OAAQuD,aAAY,cAAevE,MAAI,EAACiB,KAAMoD,KAE5DrI,EAAAC,EAAAC,cAAA,KAAG4D,KAAM,+BACP9D,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAME,KAAM,SAAUuD,aAAY,SAAUvE,MAAI,EAACiB,KAAMoD,KAEzDrI,EAAAC,EAAAC,cAAA,KAAG4D,KAAM,qCACP9D,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAME,KAAM,UAAWuD,aAAY,UAAWvE,MAAI,EAACiB,KAAMoD,KAE3DrI,EAAAC,EAAAC,cAAA,KAAG4D,KAAM,sCACP9D,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAME,KAAM,UAAWuD,aAAY,UAAUvE,MAAI,EAACiB,KAAMoD,KAE1DrI,EAAAC,EAAAC,cAAA,KAAG4D,KAAM,oCACP9D,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAME,KAAM,OAAQuD,aAAY,QAAQvE,MAAI,EAACiB,KAAMoD,OCG5ClD,EAjBA,SAAAsC,GAAA,IAAGe,EAAHf,EAAGe,UAAHJ,EAAAX,EAAcY,gBAAd,IAAAD,EAAwB,QAAxBA,EAAA,OACbpI,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMiE,GAAI,SAAUpJ,UAAW,SAAUqJ,cAAc,SAASC,QAAM,GACpE3I,EAAAC,EAAAC,cAACsE,EAAA,EAAKC,IAAN,KACEzE,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,OAAN,CAAaC,MAAO,IAClB3E,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAWH,GAAI,MACbzI,EAAAC,EAAAC,cAAC2I,EAAA,KAAD,CAAMC,GAAI,IAAKzJ,UAAW,SACvBmJ,KAIPxI,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAClB3E,EAAAC,EAAAC,cAAC6I,EAAD,CAAcV,SAAUA,iBCDjBW,EAXA,kBACbhJ,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMiE,GAAI,SAAUE,QAAM,GACxB3I,EAAAC,EAAAC,cAACsE,EAAA,EAAKC,IAAN,KACEzE,EAAAC,EAAAC,cAACsE,EAAA,EAAKE,OAAN,CAAaC,MAAO,IAClB3E,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,MACAjJ,EAAAC,EAAAC,cAAC6I,EAAD,UCAFG,iBAAS,SAAAzB,GAAA,IAAGrI,EAAHqI,EAAGrI,SAAH,OACbY,EAAAC,EAAAC,cAAC2I,EAAA,YAAD,CACElC,MAAK,YASLC,OAAQ,SAAAF,GAAI,OACV1G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqI,SAAA,KACEtI,EAAAC,EAAAC,cAACiJ,EAAAlJ,EAAD,CACEmJ,MAAO1C,EAAK2C,KAAKC,aAAaF,MAC9BnI,KAAM,CACJ,CAAE+D,KAAM,cAAe1F,QAAS,oCAChC,CAAE0F,KAAM,WAAY1F,QAAS,mCAG/BU,EAAAC,EAAAC,cAAA,QAAMqJ,KAAK,QAEbvJ,EAAAC,EAAAC,cAACc,EAAD,CAAQwH,UAAW9B,EAAK2C,KAAKC,aAAaF,QAC1CpJ,EAAAC,EAAAC,cAAA,YACGd,GAEHY,EAAAC,EAAAC,cAACsJ,EAAD,QAzBN9C,KAAA+C,MA+BFP,EAAO3I,UAAY,CACjBnB,SAAU0H,IAAU4C,KAAKzC,YAGZiC,2BC9Cf,IAAAS,EAAetE,EAAQ,KACvBuE,EAAmBvE,EAAQ,KAC3BwE,EAAcxE,EAAQ,KACtByE,EAAczE,EAAQ,KAiDtB+B,EAAAC,QALA,SAAA0C,EAAAC,GAEA,OADAF,EAAAC,GAAAJ,EAAAE,GACAE,EAAAH,EAAAI,EAAA,0BCjDA,IAAAC,EAAe5E,EAAQ,KACvB6E,EAAkB7E,EAAQ,KAoB1B+B,EAAAC,QAVA,SAAA0C,EAAAC,GACA,IAAAG,GAAA,EACAC,EAAAF,EAAAH,GAAAlH,MAAAkH,EAAApH,QAAA,GAKA,OAHAsH,EAAAF,EAAA,SAAArG,EAAA3B,EAAAgI,GACAK,IAAAD,GAAAH,EAAAtG,EAAA3B,EAAAgI,KAEAK","file":"component---src-pages-index-js-78213a80947a19c54300.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};","import React from 'react'\nimport { navigate } from 'gatsby'\nimport { Card, Grid, Icon } from 'semantic-ui-react'\n\nimport Layout from '../components/layout'\n\nconst IndexPage = () => (\n  <Layout>\n    <Grid centered>\n      <Grid.Row>\n        <Grid.Column width={10}>\n          <Card.Group centered>\n            <Card raised link onClick={() => navigate('/chado/')}>\n              <Icon className={'center'} area-label={'Chado'} name={'coffee'} size={'huge'} />\n              <Card.Content>\n                <Card.Header>\n                  Chado\n                </Card.Header>\n                <Card.Description>\n                  Learn about the FlyBase Chado database.  How to download it,\n                  access our public server, query it, etc...\n                </Card.Description>\n              </Card.Content>\n            </Card>\n            <Card raised link onClick={() => navigate('/downloads/')}>\n              <Icon className={'center'} area-label={'Downloads'} name={'download'} size={'huge'} />\n              <Card.Content>\n                <Card.Header>\n                  Downloads\n                </Card.Header>\n                <Card.Description>\n                  Information on various downloadable files available from FlyBase.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n            <Card raised link onClick={() => navigate('/api/')}>\n              <Icon className={'center'} area-label={'API'} name={'cogs'} size={'huge'} />\n              <Card.Content>\n                <Card.Header>\n                  API\n                </Card.Header>\n                <Card.Description>\n                  Documentation and examples on using the FlyBase API.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n            <Card raised link href={'https://www.github.com/FlyBase'}>\n              <Icon className={'center'} area-label={'GitHub'} name={'code'} size={'huge'} />\n              <Card.Content>\n                <Card.Header>\n                  FlyBase code\n                </Card.Header>\n                <Card.Description>\n                   Visit the FlyBase GitHub organization for our publicly available code.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Card.Group>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Layout>\n\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Icon } from 'semantic-ui-react'\n\n\nfunction FlyBaseIcons({iconSize='large'}) {\n  return (\n    <React.Fragment>\n      <a href={'http://flybase.org'}>\n        <Icon name={'home'} aria-label={'FlyBase.org'} link size={iconSize}/>\n      </a>\n      <a href={'https://github.com/FlyBase/'}>\n        <Icon name={'github'} aria-label={'GitHub'} link size={iconSize}/>\n      </a>\n      <a href={'https://twitter.com/FlyBaseDotOrg'}>\n        <Icon name={'twitter'} aria-label={'Twitter'} link size={iconSize}/>\n      </a>\n      <a href={'http://www.youtube.com/c/FlyBaseTV'}>\n        <Icon name={'youtube'} aria-label={'YouTube'}link size={iconSize}/>\n      </a>\n      <a href={'http://flybase.org/contact/email'}>\n        <Icon name={'mail'} aria-label={'Email'}link size={iconSize}/>\n      </a>\n    </React.Fragment>\n  );\n}\n\nexport default FlyBaseIcons;","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Grid, Header as SemHeader } from 'semantic-ui-react'\n\nimport FlyBaseIcons from './FlyBaseIcons'\n\nconst Header = ({ siteTitle, iconSize ='large' }) => (\n  <Grid as={'header'} className={'topbar'} verticalAlign='middle' padded>\n    <Grid.Row>\n      <Grid.Column width={12} >\n        <SemHeader as={'h1'}>\n          <Link to={'/'} className={'title'}>\n            {siteTitle}\n          </Link>\n        </SemHeader>\n      </Grid.Column>\n      <Grid.Column width={4}>\n        <FlyBaseIcons iconSize={iconSize}/>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n)\n\nexport default Header\n","import React from 'react'\nimport { Divider, Grid } from 'semantic-ui-react'\n\nimport FlyBaseIcons from './FlyBaseIcons'\n\nconst Footer = () => (\n  <Grid as={'footer'} padded>\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <Divider/>\n        <FlyBaseIcons />\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport Footer from './footer'\nimport 'semantic-ui-css/semantic.min.css'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'FlyBase developer documentation.' },\n            { name: 'keywords', content: 'FlyBase, chado, documentation'},\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>\n          {children}\n        </main>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n"],"sourceRoot":""}